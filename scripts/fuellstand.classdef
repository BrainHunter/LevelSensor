# Ãœbergabeparameter I2C ID
params i2cID
# Umsetzung in ECMD Befehle
# Fuellstand 0-100%:
get fuellstand cmd {"i2c rbd %i2cID 0\n"}
get fuellstand expect "0x[\da-fA-F]+\n"
get fuellstand postproc {hex(trim("$_"));}
#
# raw Value - Register 2+3:
get raw cmd {"i2c rwd %i2cID 2\n"}
get raw expect "0x[\da-fA-F]+\n"
get raw postproc {unpack("S", pack("n",hex(trim("$_"))));}
#
# max value - Register 4+5:
get max_value cmd {"i2c rwd %i2cID 4\n"}
get max_value expect "0x[\da-fA-F]+\n"
get max_value postproc {unpack("S", pack("n",hex(trim("$_"))));}
set max_value params Value
set max_value cmd {sprintf("i2c wwd %i2cID 4 %04x\n", unpack("n", pack("S", %Value)));}
set max_value expect "0x[\da-fA-F]+\n"
set max_value postproc {unpack("S", pack("n",hex(trim("$_"))));}
#
# min_value - Register 6+7:
get min_value cmd {"i2c rwd %i2cID 6\n"}
get min_value expect "0x[\da-fA-F]+\n"
get min_value postproc {unpack("S", pack("n",hex(trim("$_"))));}
set min_value params Value
set min_value cmd {sprintf("i2c wwd %i2cID 6 %04x\n", unpack("n", pack("S", %Value)));}
set min_value expect "0x[\da-fA-F]+\n"
set min_value postproc {unpack("S", pack("n",hex(trim("$_"))));}
#
# Measure - Register 1 = 1!
set Measure cmd {"i2c wbd %i2cID 1 01\n"}
set Measure expect "0x01\n"
set Measure postproc {s/([0x01\n|;]*)/success/; "$_" eq "success" ? "ok" : "error"; }
#
# write eeprom - Register 1 = 2!
set write_eeprom cmd {"i2c wbd %i2cID 1 02\n"}
set write_eeprom expect "0x02\n"
set write_eeprom postproc {s/([0x02\n|;]*)/success/; "$_" eq "success" ? "ok" : "error"; }
#
# read eeprom - Register 1 = 3!
set read_eeprom cmd {"i2c wbd %i2cID 1 03\n"}
set read_eeprom expect "0x03\n"
set read_eeprom postproc {s/([0x03\n|;]*)/success/; "$_" eq "success" ? "ok" : "error"; }



